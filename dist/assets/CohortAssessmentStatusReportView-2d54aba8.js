import{u as y}from"./CohortsStore-2f7cfd31.js";import{_ as u,o as m,c as g,f as x,r as S,a as r,t as k,k as C,b as w}from"./main-bd9f0ee9.js";import{s as p}from"./transform-7263f110.js";import{l as $,m as A,b,s as B}from"./linear-78f05e13.js";import{a as v,b as D}from"./continuous-5681c0ba.js";const j={name:"CohortPassedAssessmentsHorizontalBarChart",props:["data","colour"],data(){return{padding:60}},mounted(){p("#cohort-passed-assessments-chart-container");const s=25,e=0,l=0,d=10,o=200,n=1e3,i=Math.ceil((this.data.length+.1)*s)+e+d,a=$().domain([0,A(this.data,t=>t.quantity)]).range([o,n-l]),c=b().domain(B(this.data,t=>-t.quantity).map(t=>t.name)).rangeRound([e,i-d]).padding(.1),f=a.tickFormat(20),h=p("#cohort-passed-assessments-chart-container").append("svg").attr("width",n).attr("height",i).attr("viewBox",[0,0,n,i]).attr("style","max-width: 100%; height: 100%; font: 14px sans-serif;");h.append("g").attr("fill",this.colour).selectAll().data(this.data).join("rect").attr("x",a(0)).attr("y",t=>c(t.name)).attr("width",t=>a(t.quantity)-a(0)).attr("height",c.bandwidth()),h.append("g").attr("fill","white").attr("text-anchor","end").selectAll().data(this.data).join("text").attr("x",t=>a(t.quantity)).attr("y",t=>c(t.name)+c.bandwidth()/2).attr("dy","0.35em").attr("dx",-4).text(t=>f(t.quantity)).call(t=>t.filter(_=>a(_.quantity)-a(0)<20).attr("dx",4).attr("fill","black").attr("text-anchor","start")),h.append("g").attr("transform",`translate(0,${e})`).call(v(a).ticks(0)).call(t=>t.select(".domain").remove()),h.append("g").attr("transform",`translate(${o},0)`).call(D(c).tickSizeOuter(0))},computed:{}},q={id:"cohort-passed-assessments-chart-container"};function z(s,e,l,d,o,n){return m(),g("div",q)}const H=u(j,[["render",z]]),I={setup(){const s=y(),e=x();return{cohortsStore:s,userDetailsStore:e}},components:{CohortPassedAssessmentsHorizontalBarChart:H},data(){return{cohortId:this.$route.params.cohortId,cohortName:"",masteredSkillQuantities:[]}},async created(){this.getCohortMasteredAssessments(),this.cohortsStore.cohorts.length<1&&await this.cohortsStore.getCohorts(this.userDetailsStore.userId);const s=this.cohortsStore.cohorts.find(e=>e.id==this.cohortId);s&&(this.cohortName=s.name)},methods:{async getCohortMasteredAssessments(){fetch(`/student-analytics/mastered-skills/cohort/${this.cohortId}`).then(s=>s.json()).then(s=>{this.masteredSkillQuantities=s}).catch(s=>{console.error("Error fetching last visited skills:",s)})},assessmentDate(s){return new Date(s).toLocaleString("en-US",{year:"numeric",month:"2-digit",day:"2-digit",hour:"2-digit",minute:"2-digit",second:"2-digit"})}}},N={class:"container"},P={class:"d-flex justify-content-between w-100"},Q=r("h1",{class:"heading"},"Assessment Status Report",-1),R={class:"secondary-heading h3"},L=r("h2",{class:"secondary-heading"},"Passed",-1),M=r("h2",{class:"secondary-heading"},"Attempted",-1),V=r("h2",{class:"secondary-heading"},"Failed multiple times",-1);function E(s,e,l,d,o,n){const i=S("CohortPassedAssessmentsHorizontalBarChart");return m(),g("div",N,[r("span",P,[Q,r("h2",R,k(o.cohortName),1)]),L,o.masteredSkillQuantities.length>0?(m(),C(i,{key:0,data:o.masteredSkillQuantities,colour:"darkgreen"},null,8,["data"])):w("",!0),M,V])}const J=u(I,[["render",E]]);export{J as default};
