import{g as P}from"./index.es6-593402c1.js";var H=function(O){var I={};function a(l){if(I[l])return I[l].exports;var d=I[l]={i:l,l:!1,exports:{}};return O[l].call(d.exports,d,d.exports,a),d.l=!0,d.exports}return a.m=O,a.c=I,a.d=function(l,d,b){a.o(l,d)||Object.defineProperty(l,d,{configurable:!1,enumerable:!0,get:b})},a.r=function(l){Object.defineProperty(l,"__esModule",{value:!0})},a.n=function(l){var d=l&&l.__esModule?function(){return l.default}:function(){return l};return a.d(d,"a",d),d},a.o=function(l,d){return Object.prototype.hasOwnProperty.call(l,d)},a.p="/dist/",a(a.s=1)}([function(O,I,a){a.r(I);var l={equal:0,delete:1,insert:2,none:3,replace:4};class d{constructor(e,t,n){this.startInOld=e,this.startInNew=t,this.size=n}get endInOld(){return this.startInOld+this.size}get endInNew(){return this.startInNew+this.size}}class b{constructor(){this.blockSize=0,this.repeatingWordsAccuracy=0,this.ignoreWhitespaceDifferences=!1}}const z=/^\s*<\/?[^>]+>\s*$/,E=/<[^\s>]+/,B=/^(\s|&nbsp;)+$/,q=/[\w\#@]+/,A=["<img"];function m(h){return!A.some(e=>h!==null&&h.startsWith(e))&&z.test(h)}function C(h,e,t){return["<",e,' class="',t,'">',h,"</",e,">"].join("")}function N(h){return h==="<"}function M(h){return h==="&"}function _(h){return h===";"}function W(h){return B.test(h)}function F(h){return m(h)?function(e){return e=E.exec(e)[0]+(e.endsWith("/>")?"/>":">")}(h):h}function k(h){return q.test(h)}function T(h,e,t){return h.push(e),h.length>t&&h.shift(),h.length!==t?null:h.join("")}class R{constructor(e,t,n,r,o,i,s){this.oldWords=e,this.newWords=t,this.startInOld=n,this.endInOld=r,this.startInNew=o,this.endInNew=i,this.options=s}indexNewWords(){this.wordIndices=new Map;let e=[];for(let t=this.startInNew;t<this.endInNew;t++){let n=T(e,this.normalizeForIndex(this.newWords[t]),this.options.blockSize);n!==null&&(this.wordIndices.has(n)?this.wordIndices.get(n).push(t):this.wordIndices.set(n,[t]))}}normalizeForIndex(e){return e=F(e),this.options.IgnoreWhiteSpaceDifferences&&W(e)?" ":e}findMatch(){if(this.indexNewWords(),this.removeRepeatingWords(),this.wordIndices.length===0)return null;let e=this.startInOld,t=this.startInNew,n=0,r=new Map;const o=this.options.blockSize;let i=[];for(let s=this.startInOld;s<this.endInOld;s++){let u=T(i,this.normalizeForIndex(this.oldWords[s]),o);if(u===null)continue;let f=new Map;if(this.wordIndices.has(u)){for(let p of this.wordIndices.get(u)){let g=(r.has(p-1)?r.get(p-1):0)+1;f.set(p,g),g>n&&(e=s-g-o+2,t=p-g-o+2,n=g)}r=f}else r=f}return n!==0?new d(e,t,n+o-1):null}removeRepeatingWords(){let e=this.newWords.length+this.options.repeatingWordsAccuracy,t=Array.from(this.wordIndices.entries()).filter(n=>n[1].length>e).map(n=>n[0]);for(let n of t)this.wordIndices.delete(n)}}class v{constructor(e,t,n,r,o){this.action=e,this.startInOld=t,this.endInOld=n,this.startInNew=r,this.endInNew=o}}var c={character:0,tag:1,whitespace:2,entity:3};function j(h,e){let t={mode:c.character,currentWord:[],words:[]},n=function(u,f){let p=new Map;if(f===null)return p;for(let g of f){let x;for(;(x=g.exec(u))!==null;){if(p.has(x.index))throw new Error("One or more block expressions result in a text sequence that overlaps. Current expression: "+g.toString());p.set(x.index,x.index+x[0].length)}}return p}(h,e),r=!!n.size,o=!1,i=-1;for(let u=0;u<h.length;u++){var s=h[u];if(r&&(i===index&&(i=-1,o=!1),n.has(index)&&(o=!0,i=n.get(index)),o)){t.currentWord.push(s),t.mode=c.character;continue}switch(t.mode){case c.character:N(s)?w(t,"<",c.tag):M(s)?w(t,s,c.entity):W(s)?w(t,s,c.whitespace):k(s)&&(t.currentWord.length===0||k(t.currentWord[t.currentWord.length-1]))?t.currentWord.push(s):w(t,s,c.character);break;case c.tag:s===">"?(t.currentWord.push(s),t.words.push(t.currentWord.join("")),t.currentWord=[],t.mode=W(s)?c.whitespace:c.character):t.currentWord.push(s);break;case c.whitespace:N(s)?w(t,s,c.tag):M(s)?w(t,s,c.entity):W(s)?t.currentWord.push(s):w(t,s,c.character);break;case c.entity:if(N(s))w(t,s,c.tag);else if(W(s))w(t,s,c.whitespace);else if(_(s)){let f=!0;if(t.currentWord.length!==0&&(t.currentWord.push(s),t.words.push(t.currentWord.join("")),t.words.length>2&&W(t.words[t.words.length-2])&&W(t.words[t.words.length-1]))){let p=t.words[t.words.length-2],g=t.words[t.words.length-1];t.words.splice(t.words.length-2,2),t.currentWord=[(p+g).split()],t.mode=c.whitespace,f=!1}f&&(t.currentWord=[],t.mode=c.character)}else k(s)?t.currentWord.push(s):w(t,s,c.character)}}return t.currentWord.length!==0&&t.words.push(t.currentWord.join("")),t.words}function w(h,e,t){h.currentWord.length!==0&&h.words.push(h.currentWord.join("")),h.currentWord=[e],h.mode=t}const G=4,D=new Map([["</strong>",0],["</em>",0],["</b>",0],["</i>",0],["</big>",0],["</small>",0],["</u>",0],["</sub>",0],["</strike>",0],["</s>",0]]),S=/<((strong)|(b)|(i)|(em)|(big)|(small)|(u)|(sub)|(sup)|(strike)|(s))[\>\s]+/gi;class y{constructor(e,t){this.content=[],this.newText=t,this.oldText=e,this.specialTagDiffStack=[],this.newWords=[],this.oldWords=[],this.matchGranularity=0,this.blockExpressions=[],this.repeatingWordsAccuracy=1,this.ignoreWhiteSpaceDifferences=!1,this.orphanMatchThreshold=0}build(){if(this.oldText===this.newText)return this.newText;this.splitInputsIntoWords(),this.matchGranularity=Math.min(G,this.oldWords.length,this.newWords.length);let e=this.operations();for(let t of e)this.performOperation(t);return this.content.join("")}addBlockExpression(e){this.blockExpressions.push(e)}splitInputsIntoWords(){this.oldWords=j(this.oldText,this.blockExpressions),this.oldText=null,this.newWords=j(this.newText,this.blockExpressions),this.newText=null}performOperation(e){switch(e.action){case l.equal:this.processEqualOperation(e);break;case l.delete:this.processDeleteOperation(e,"diffdel");break;case l.insert:this.processInsertOperation(e,"diffins");break;case l.none:break;case l.replace:this.processReplaceOperation(e)}}processReplaceOperation(e){this.processDeleteOperation(e,"diffmod"),this.processInsertOperation(e,"diffmod")}processInsertOperation(e,t){let n=this.newWords.filter((r,o)=>o>=e.startInNew&&o<e.endInNew);this.insertTag("ins",t,n)}processDeleteOperation(e,t){let n=this.oldWords.filter((r,o)=>o>=e.startInOld&&o<e.endInOld);this.insertTag("del",t,n)}processEqualOperation(e){let t=this.newWords.filter((n,r)=>r>=e.startInNew&&r<e.endInNew);this.content.push(t.join(""))}insertTag(e,t,n){for(;n.length;){let r=this.extractConsecutiveWords(n,s=>!m(s)),o="",i=!1;if(r.length!==0){let s=C(r.join(""),e,t);this.content.push(s)}else{if(S.test(n[0])){if(this.specialTagDiffStack.push(n[0]),o='<ins class="mod">',e==="del")for(n.shift();n.length>0&&S.test(n[0]);)n.shift()}else if(D.has(n[0])){let s=this.specialTagDiffStack.length===0?null:this.specialTagDiffStack.pop();if(s!==null&&s===n[0].replace(/\//g,"")&&(o="</ins>",i=!0),e==="del")for(n.shift();n.length>0&&D.has(n[0]);)n.shift()}if(n.length===0&&o.length===0)break;i?this.content.push(o+this.extractConsecutiveWords(n,m).join("")):this.content.push(this.extractConsecutiveWords(n,m).join("")+o)}}}extractConsecutiveWords(e,t){let n=null;for(let r=0;r<e.length;r++){let o=e[r];if(r===0&&o===" "&&(e[r]="&nbsp;"),!t(o)){n=r;break}}if(n!==null){let r=e.filter((o,i)=>i>=0&&i<n);return n>0&&e.splice(0,n),r}{let r=e.filter((o,i)=>i>=0&&i<e.length);return e.splice(0,e.length),r}}operations(){let e=0,t=0,n=[],r=this.matchingBlocks();r.push(new d(this.oldWords.length,this.newWords.length,0));let o=this.removeOrphans(r);for(let i of o){let s,u=e===i.startInOld,f=t===i.startInNew;(s=u||f?u&&!f?l.insert:u?l.none:l.delete:l.replace)!==l.none&&n.push(new v(s,e,i.startInOld,t,i.startInNew)),i.length!==0&&n.push(new v(l.equal,i.startInOld,i.endInOld,i.startInNew,i.endInNew)),e=i.endInOld,t=i.endInNew}return n}*removeOrphans(e){let t=null,n=null;for(let r of e){if(n===null){t=new d(0,0,0),n=r;continue}if(t.endInOld===n.startInOld&&t.endInNew===n.startInNew||n.endInOld===r.startInOld&&n.endInNew===r.startInNew){yield n,t=n,n=r;continue}let o=(u,f)=>u+f.length,i=this.oldWords.slice(t.endInOld,r.startInOld).reduce(o,0),s=this.newWords.slice(t.endInNew,r.startInNew).reduce(o,0);this.newWords.slice(n.startInNew,n.endInNew).reduce(o,0)>Math.max(i,s)*this.orphanMatchThreshold&&(yield n),t=n,n=r}yield n}matchingBlocks(){let e=[];return this.findMatchingBlocks(0,this.oldWords.length,0,this.newWords.length,e),e}findMatchingBlocks(e,t,n,r,o){let i=this.findMatch(e,t,n,r);i!==null&&(e<i.startInOld&&n<i.startInNew&&this.findMatchingBlocks(e,i.startInOld,n,i.startInNew,o),o.push(i),i.endInOld<t&&i.endInNew<r&&this.findMatchingBlocks(i.endInOld,t,i.endInNew,r,o))}findMatch(e,t,n,r){for(let o=this.matchGranularity;o>0;o--){let i=new b;i.blockSize=o,i.repeatingWordsAccuracy=this.repeatingWordsAccuracy,i.ignoreWhitespaceDifferences=this.ignoreWhiteSpaceDifferences;let s=new R(this.oldWords,this.newWords,e,t,n,r,i).findMatch();if(s!==null)return s}return null}}y.execute=function(h,e){return new y(h,e).build()},I.default=y},function(O,I,a){O.exports=a(0)}]);const J=P(H);export{J as H};
