import{_ as h,o as d,c as l,a as t,F as f,z as g,t as c,s as p,w as m,Q as _}from"./main-7e4bfab2.js";const y={setup(){},data(){return{studentId:this.$route.params.studentId,payments:[]}},async created(){this.getPayments()},methods:{getPayments(){fetch(`/referrals/get-receipts/${this.studentId}`).then(function(e){return e.json()}).then(async e=>{this.payments=e})},async toggleIsCompensated(e,o){try{const s={method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify({is_partner_compensated:o})};await fetch(`/referrals/${e}/update`,s)}catch(s){console.error("Error updating instructor:",s)}},formattedStripeReceiptAmount(e){return(e/100).toLocaleString("en-US",{style:"currency",currency:"USD"})},formattedStripeReceiptDate(e){let o=new Date(e);const s=o.getUTCMonth()+1,i=o.getUTCDate();return o.getUTCFullYear()+"/"+s+"/"+i}}},S={class:"container bg-light rounded"},C=t("h1",{class:"heading"},"Student Payments",-1),U={class:"h6"},D=t("strong",null,"total:",-1),w=t("strong",null,"amount owed to partner:",-1),v=["onUpdate:modelValue","onClick"],V=t("label",{class:"me-4 ms-2",for:"one"},"Not paid",-1),k=["onClick","onUpdate:modelValue"],I=t("label",{class:"ms-2",for:"two"},"Paid",-1);function P(e,o,s,i,u,a){return d(),l("div",S,[C,t("ul",null,[(d(!0),l(f,null,g(u.payments,n=>(d(),l("li",null,[t("h2",U,c(a.formattedStripeReceiptDate(n.date)),1),t("ul",null,[t("li",null,[D,p(" "+c(a.formattedStripeReceiptAmount(n.amount)),1)]),t("li",null,[w,p(" "+c(a.formattedStripeReceiptAmount(n.amount/3)),1)]),t("li",null,[m(t("input",{type:"radio",id:"one",value:"0","onUpdate:modelValue":r=>n.is_partner_compensated=r,onClick:r=>a.toggleIsCompensated(n.id,0)},null,8,v),[[_,n.is_partner_compensated]]),V,m(t("input",{type:"radio",id:"two",value:"1",onClick:r=>a.toggleIsCompensated(n.id,1),"onUpdate:modelValue":r=>n.is_partner_compensated=r},null,8,k),[[_,n.is_partner_compensated]]),I])])]))),256))])])}const T=h(y,[["render",P]]);export{T as default};
