import{q as e}from"./main-2721b449.js";const r=e("analytics",{state:()=>({durationPerDay:[],avgTimeOnSkills:[],percentageStudentsMasteredOneSkill:[],tenantProgress:[],numSkillsPassedPerNumStudents:[],passedAssessments:[],failedAssessments:[],rootSubjectsFailedAssessments:[],rootSubjectsPassedAssessments:[],rootSubjectsAttemptedAssessments:[],attemptedAssessments:[],avgTokensToMasterSkills:[],totalTokensPerSkill:[],totalTokensPerDay:[],studentRootSubjectsFailedAssessments:[],studentRootSubjectsPassedAssessments:[],studentRootSubjectsAttemptedAssessments:[]}),actions:{async getStudentFailedAssessmentsBySubject(t){try{const s=await fetch(`/student-analytics/failed-assessments-by-subject/student/${t}`);if(!s.ok)throw new Error(`HTTP error! status: ${s.status}`);this.studentRootSubjectsFailedAssessments=await s.json()}catch(s){console.error("Error fetching student mastered assessments:",s),this.studentRootSubjectsFailedAssessments=[]}},async getStudentPassedAssessmentsBySubject(t){try{const s=await fetch(`/student-analytics/passed-assessments-by-subject/student/${t}`);if(!s.ok)throw new Error(`HTTP error! status: ${s.status}`);this.studentRootSubjectsPassedAssessments=await s.json()}catch(s){console.error("Error fetching student mastered assessments:",s),this.studentRootSubjectsPassedAssessments=[]}},async getStudentAttemptedAssessmentsBySubject(t){try{const s=await fetch(`/student-analytics/attempted-assessments-by-subject/student/${t}`);if(!s.ok)throw new Error(`HTTP error! status: ${s.status}`);this.studentRootSubjectsAttemptedAssessments=await s.json()}catch(s){console.error("Error fetching student mastered assessments:",s),this.studentRootSubjectsAttemptedAssessments=[]}}}});export{r as u};
