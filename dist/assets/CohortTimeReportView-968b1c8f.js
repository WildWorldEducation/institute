import{u as P}from"./CohortsStore-11d16bef.js";import{_ as D,o as c,c as m,e as $,r as g,a as u,t as T,k as f,b as q}from"./main-feaec095.js";import{C as b}from"./CohortDurationPerDayLineChart-43d8f522.js";import{s as p}from"./transform-62bed377.js";import{l as S,m as k,f as C,b as x}from"./linear-c1216a03.js";import{b as _}from"./band-22321830.js";import{s as w}from"./sort-a49d696f.js";import"./line-61e28c6d.js";import"./time-8a8f3333.js";import"./point-ea70dc51.js";import"./ordinal-3694ef9e.js";const A={name:"CohortCompareDurationHorizontalChart",props:["data","colour"],data(){return{padding:60}},mounted(){p("#cohort-compare-duration-chart-container");const t=25,o=0,a=0,h=10,n=200,i=1e3,l=Math.ceil((this.data.length+.1)*t)+o+h,e=S().domain([0,k(this.data,r=>r.quantity)]).range([n,i-a]),s=_().domain(w(this.data,r=>-r.quantity).map(r=>r.name)).rangeRound([o,l-h]).padding(.1);e.tickFormat(20);const d=p("#cohort-compare-duration-chart-container").append("svg").attr("width",i).attr("height",l).attr("viewBox",[0,0,i,l]).attr("style","max-width: 100%; height: 100%; font: 14px sans-serif;");d.append("g").attr("fill",this.colour).selectAll().data(this.data).join("rect").attr("x",e(0)).attr("y",r=>s(r.name)).attr("width",r=>e(r.quantity)-e(0)).attr("height",s.bandwidth()),d.append("g").attr("fill","white").attr("text-anchor","end").selectAll().data(this.data).join("text").attr("x",r=>e(r.quantity)).attr("y",r=>s(r.name)+s.bandwidth()/2).attr("dy","0.35em").attr("dx",-4).text(r=>r.formattedQuantity).call(r=>r.filter(y=>e(y.quantity)-e(0)<20).attr("dx",4).attr("fill","black").attr("text-anchor","start")),d.append("g").attr("transform",`translate(0,${o})`).call(C(e).ticks(0)).call(r=>r.select(".domain").remove()),d.append("g").attr("transform",`translate(${n},0)`).call(x(s).tickSizeOuter(0))}},v={id:"cohort-compare-duration-chart-container"};function j(t,o,a,h,n,i){return c(),m("div",v)}const B=D(A,[["render",j]]),I={name:"CohortDurationPerSkillHorizontalBarChart",props:["data","colour"],data(){return{padding:60}},mounted(){p("#cohort-duration-per-skill-chart-container");const t=25,o=0,a=0,h=10,n=200,i=1e3,l=Math.ceil((this.data.length+.1)*t)+o+h,e=S().domain([0,k(this.data,r=>r.quantity)]).range([n,i-a]),s=_().domain(w(this.data,r=>-r.quantity).map(r=>r.name)).rangeRound([o,l-h]).padding(.1);e.tickFormat(20);const d=p("#cohort-duration-per-skill-chart-container").append("svg").attr("width",i).attr("height",l).attr("viewBox",[0,0,i,l]).attr("style","max-width: 100%; height: 100%; font: 14px sans-serif;");d.append("g").attr("fill",this.colour).selectAll().data(this.data).join("rect").attr("x",e(0)).attr("y",r=>s(r.name)).attr("width",r=>e(r.quantity)-e(0)).attr("height",s.bandwidth()),d.append("g").attr("fill","white").attr("text-anchor","end").selectAll().data(this.data).join("text").attr("x",r=>e(r.quantity)).attr("y",r=>s(r.name)+s.bandwidth()/2).attr("dy","0.35em").attr("dx",-4).text(r=>r.formattedQuantity).call(r=>r.filter(y=>e(y.quantity)-e(0)<40).attr("dx",4).attr("fill","black").attr("text-anchor","start")),d.append("g").attr("transform",`translate(0,${o})`).call(C(e).ticks(0)).call(r=>r.select(".domain").remove()),d.append("g").attr("transform",`translate(${n},0)`).call(x(s).tickSizeOuter(0))},computed:{}},z={id:"cohort-duration-per-skill-chart-container"};function H(t,o,a,h,n,i){return c(),m("div",z)}const M=D(I,[["render",H]]),Q={setup(){const t=P(),o=$();return{cohortsStore:t,userDetailsStore:o}},components:{CohortDurationPerDayLineChart:b,CohortCompareDurationHorizontalChart:B,CohortDurationPerSkillHorizontalBarChart:M},data(){return{cohortId:this.$route.params.cohortId,cohortName:"",durationsPerDay:[],studentTotalDurations:[],studentDurationsPerSkill:[]}},async created(){this.cohortsStore.cohorts.length<1&&await this.cohortsStore.getCohorts(this.userDetailsStore.userId);const t=this.cohortsStore.cohorts.find(o=>o.id==this.cohortId);t&&(this.cohortName=t.name),this.cohortId!="all-students"?(await this.getCohortDurationPerDay(),await this.getCohortStudentTotalDurations(),await this.getCohortDurationsPerSkill()):(await this.getAllStudentsDurationPerDay(),await this.getAllStudentsStudentTotalDurations(),await this.getAllStudentsDurationsPerSkill())},methods:{async getCohortDurationPerDay(){fetch(`/student-analytics/cohort-duration-per-day/${this.cohortId}`).then(t=>t.json()).then(t=>{for(let o=0;o<t.length;o++)t[o].formattedQuantity=t[o].quantity/(1e3*60),t[o].date=new Date(t[o].date);t.sort((o,a)=>o.date-a.date),this.durationsPerDay=t}).catch(t=>{console.error("Error fetching student duration per day:",t)})},async getAllStudentsDurationPerDay(){fetch(`/student-analytics/all-students-duration-per-day/${this.userDetailsStore.userId}`).then(t=>t.json()).then(t=>{for(let o=0;o<t.length;o++)t[o].formattedQuantity=t[o].quantity/(1e3*60),t[o].date=new Date(t[o].date);t.sort((o,a)=>o.date-a.date),this.durationsPerDay=t}).catch(t=>{console.error("Error fetching student duration per day:",t)})},async getCohortStudentTotalDurations(){fetch(`/student-analytics/cohort-total-durations/${this.cohortId}`).then(t=>t.json()).then(t=>{for(let o=0;o<t.length;o++)t[o].formattedQuantity=this.millisToMinutesAndSeconds(t[o].quantity),t[o].date=new Date(t[o].date);t.sort((o,a)=>o.date-a.date),this.studentTotalDurations=t}).catch(t=>{console.error("Error fetching student duration per day:",t)})},async getAllStudentsStudentTotalDurations(){fetch(`/student-analytics/all-students-total-durations/${this.userDetailsStore.userId}`).then(t=>t.json()).then(t=>{for(let o=0;o<t.length;o++)t[o].formattedQuantity=this.millisToMinutesAndSeconds(t[o].quantity),t[o].date=new Date(t[o].date);t.sort((o,a)=>o.date-a.date),this.studentTotalDurations=t}).catch(t=>{console.error("Error fetching student duration per day:",t)})},async getCohortDurationsPerSkill(){fetch(`/student-analytics/cohort-student-durations-per-skill/${this.cohortId}`).then(t=>t.json()).then(t=>{for(let o=0;o<t.length;o++)t[o].formattedQuantity=this.millisToMinutesAndSeconds(t[o].quantity);this.studentDurationsPerSkill=t}).catch(t=>{console.error("Error fetching student durations per skill:",t)})},async getAllStudentsDurationsPerSkill(){fetch(`/student-analytics/all-students-student-durations-per-skill/${this.userDetailsStore.userId}`).then(t=>t.json()).then(t=>{for(let o=0;o<t.length;o++)t[o].formattedQuantity=this.millisToMinutesAndSeconds(t[o].quantity);this.studentDurationsPerSkill=t}).catch(t=>{console.error("Error fetching student durations per skill:",t)})},millisToMinutesAndSeconds(t){var o=Math.floor(t/6e4),a=(t%6e4/1e3).toFixed(0);return o+":"+(a<10?"0":"")+a}}},E={class:"container"},N={class:"d-flex justify-content-between w-100"},L={class:"secondary-heading h3"},R={key:1},F={key:3};function O(t,o,a,h,n,i){const l=g("CohortDurationPerDayLineChart"),e=g("CohortCompareDurationHorizontalChart"),s=g("CohortDurationPerSkillHorizontalBarChart");return c(),m("div",E,[u("span",N,[o[0]||(o[0]=u("h1",{class:"heading"},"Time Report",-1)),u("h2",L,T(n.cohortName),1)]),o[1]||(o[1]=u("h2",{class:"secondary-heading"},"Total time on platform per day",-1)),n.durationsPerDay.length>0?(c(),f(l,{key:0,data:n.durationsPerDay},null,8,["data"])):(c(),m("p",R,"No time recorded yet")),o[2]||(o[2]=u("h2",{class:"secondary-heading mt-4"}," Total time on platform, comparing students ",-1)),n.studentTotalDurations.length>0?(c(),f(e,{key:2,data:n.studentTotalDurations,colour:"#5f31dd"},null,8,["data"])):(c(),m("p",F,"No time recorded yet")),o[3]||(o[3]=u("h2",{class:"secondary-heading mt-4"},"Minutes per skill",-1)),n.studentDurationsPerSkill.length>0?(c(),f(s,{key:4,data:n.studentDurationsPerSkill,class:"mb-5",colour:"#5f31dd"},null,8,["data"])):q("",!0)])}const rt=D(Q,[["render",O]]);export{rt as default};
