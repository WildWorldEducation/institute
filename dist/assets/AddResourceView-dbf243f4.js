import{_ as i,a as d,o as n,c,d as s,i as l}from"./main-984c6b48.js";const u={data(){return{skillId:this.$route.params.id}},setup(){return{userDetailsStore:d()}},mounted:function(){let e=window.innerHeight-100;window.innerWidth<481?e=e-310:window.innerWidth>=481&&window.innerWidth<1024?e=e-300:e=e-450,$("#summernote").summernote({placeholder:"",height:e,tabsize:2,toolbar:[["style",["style"]],["font",["bold","underline","clear"]],["color",["color"]],["para",["ul","ol","paragraph"]],["table",["table"]],["insert",["link","picture","video"]],["view",["fullscreen","codeview","help"]]],maximumImageFileSize:2048*1024,callbacks:{onImageUploadError:function(t){alert("Max image size is 2MB.")}}}),$(".note-editor .note-editable").css("background-color","#ffffff")},methods:{Submit(){var e="/resources/add/"+this.skillId,t=$("#summernote").summernote("code");const r={method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({userId:this.userDetailsStore.userId,editordata:t})};fetch(e,r).then(function(o){return o.json()}).then(o=>{o=="blocked"&&alert("Unfortunately, that source cannot be added.")}).then(()=>{this.$router.back()})}}},m={class:"container p-2 bg-light rounded"},h=s("h1",{class:"heading"},"Add Learning Resource",-1),f={class:"d-flex flex-column"},_=s("div",{class:"mb-3 mt-3 text-area-div"},[s("textarea",{id:"summernote",name:"editordata"})],-1),p={"b-on-hover":"",title:"add this resource to it associated skill",class:"d-flex flex-row-reverse"};function b(e,t,r,o,v,a){return n(),c("div",m,[h,s("div",f,[_,s("div",p,[s("button",{class:"btn secondary-btn",onClick:t[0]||(t[0]=k=>a.Submit())}," Submit ")])])])}const g=i(u,[["render",b]]),x={__name:"AddResourceView",setup(e){return(t,r)=>(n(),l(g))}};export{x as default};
