import{u as S}from"./CohortsStore-c44a567f.js";import{_ as y,o as l,c as A,f as k,r as u,a as o,t as x,k as f,b as p}from"./main-a678ce02.js";import{s as g}from"./transform-7263f110.js";import{l as C,m as $,b as Q,s as B}from"./linear-78f05e13.js";import{a as H,b}from"./continuous-5681c0ba.js";import{F as j}from"./FailedAssessmentsHorizontalBarChart-19572e6a.js";const D={name:"CohortPassedAssessmentsHorizontalBarChart",props:["data","colour"],data(){return{padding:60}},mounted(){g("#cohort-passed-assessments-chart-container");const t=25,s=0,m=0,d=10,r=200,n=1e3,i=Math.ceil((this.data.length+.1)*t)+s+d,a=C().domain([0,$(this.data,e=>e.quantity)]).range([r,n-m]),c=Q().domain(B(this.data,e=>-e.quantity).map(e=>e.name)).rangeRound([s,i-d]).padding(.1),_=a.tickFormat(20),h=g("#cohort-passed-assessments-chart-container").append("svg").attr("width",n).attr("height",i).attr("viewBox",[0,0,n,i]).attr("style","max-width: 100%; height: 100%; font: 14px sans-serif;");h.append("g").attr("fill",this.colour).selectAll().data(this.data).join("rect").attr("x",a(0)).attr("y",e=>c(e.name)).attr("width",e=>a(e.quantity)-a(0)).attr("height",c.bandwidth()),h.append("g").attr("fill","white").attr("text-anchor","end").selectAll().data(this.data).join("text").attr("x",e=>a(e.quantity)).attr("y",e=>c(e.name)+c.bandwidth()/2).attr("dy","0.35em").attr("dx",-4).text(e=>_(e.quantity)).call(e=>e.filter(w=>a(w.quantity)-a(0)<20).attr("dx",4).attr("fill","black").attr("text-anchor","start")),h.append("g").attr("transform",`translate(0,${s})`).call(H(a).ticks(0)).call(e=>e.select(".domain").remove()),h.append("g").attr("transform",`translate(${r},0)`).call(b(c).tickSizeOuter(0))},computed:{}},F={id:"cohort-passed-assessments-chart-container"};function T(t,s,m,d,r,n){return l(),A("div",F)}const E=y(D,[["render",T]]),I={setup(){const t=S(),s=k();return{cohortsStore:t,userDetailsStore:s}},components:{CohortPassedAssessmentsHorizontalBarChart:E,FailedAssessmentsHorizontalBarChart:j},data(){return{cohortId:this.$route.params.cohortId,cohortName:"",masteredSkillQuantities:[],failedAssessmentQuantities:[]}},async created(){if(this.cohortId!="all-students"){this.getCohortMasteredAssessments(),this.getCohortFailedAssessments(),this.cohortsStore.cohorts.length<1&&await this.cohortsStore.getCohorts(this.userDetailsStore.userId);const t=this.cohortsStore.cohorts.find(s=>s.id==this.cohortId);t&&(this.cohortName=t.name)}else this.getAllStudentsAssessments(),this.getAllStudentsFailedAssessments()},methods:{async getCohortMasteredAssessments(){try{const t=await fetch(`/student-analytics/mastered-skills/cohort/${this.cohortId}`);if(!t.ok)throw new Error(`HTTP error! status: ${t.status}`);const s=await t.json();this.masteredSkillQuantities=Array.isArray(s)?s:[]}catch(t){console.error("Error fetching cohort mastered assessments:",t),this.masteredSkillQuantities=[]}},async getAllStudentsAssessments(){try{const t=await fetch(`/student-analytics/mastered-skills/all-students/${this.userDetailsStore.userId}`);if(!t.ok)throw new Error(`HTTP error! status: ${t.status}`);const s=await t.json();this.masteredSkillQuantities=Array.isArray(s)?s:[]}catch(t){console.error("Error fetching all students mastered assessments:",t),this.masteredSkillQuantities=[]}},async getCohortFailedAssessments(){try{const t=await fetch(`/student-analytics/failed-assessments/cohort/${this.cohortId}`);if(!t.ok)throw new Error(`HTTP error! status: ${t.status}`);const s=await t.json();this.failedAssessmentQuantities=Array.isArray(s)?s:[]}catch(t){console.error("Error fetching cohort failed assessments:",t),this.failedAssessmentQuantities=[]}},async getAllStudentsFailedAssessments(){try{const t=await fetch(`/student-analytics/failed-assessments/all-students/${this.userDetailsStore.userId}`);if(!t.ok)throw new Error(`HTTP error! status: ${t.status}`);const s=await t.json();this.failedAssessmentQuantities=Array.isArray(s)?s:[]}catch(t){console.error("Error fetching all students failed assessments:",t),this.failedAssessmentQuantities=[]}},assessmentDate(t){return new Date(t).toLocaleString("en-US",{year:"numeric",month:"2-digit",day:"2-digit",hour:"2-digit",minute:"2-digit",second:"2-digit"})}}},P={class:"container"},z={class:"d-flex justify-content-between w-100"},v=o("h1",{class:"heading"},"Assessment Status Report",-1),q={class:"secondary-heading h3"},N=o("h2",{class:"secondary-heading"},"Passed",-1),R=o("h2",{class:"secondary-heading"},"Attempted",-1),L=o("h2",{class:"secondary-heading"},"Failed multiple times",-1);function M(t,s,m,d,r,n){const i=u("CohortPassedAssessmentsHorizontalBarChart"),a=u("FailedAssessmentsHorizontalBarChart");return l(),A("div",P,[o("span",z,[v,o("h2",q,x(r.cohortName),1)]),N,r.masteredSkillQuantities.length>0?(l(),f(i,{key:0,data:r.masteredSkillQuantities,colour:"darkgreen"},null,8,["data"])):p("",!0),R,L,r.failedAssessmentQuantities.length>0?(l(),f(a,{key:1,data:r.failedAssessmentQuantities,colour:"darkred"},null,8,["data"])):p("",!0)])}const W=y(I,[["render",M]]);export{W as default};
