import{_ as m,o as d,c as g,A as _,r as x,a as u,t as S,k as y,b as k}from"./main-243c89a4.js";import"./transform-23c7b39f.js";import{u as $,l as P}from"./line-551a0daf.js";import{e as w}from"./extent-4cf1c809.js";import{l as B,m as C}from"./linear-1a959f2a.js";import{s as p}from"./select-03d56b88.js";import{h as v,b as L}from"./continuous-dd31f971.js";import"./time-d987a114.js";import"./init-77b53fdd.js";import"./array-4492e866.js";import"./point-e88f89db.js";import"./ascending-3ff63084.js";const N={name:"StudentProgressLineChart",props:["data","colour"],data(){return{padding:60}},mounted(){const t=this.data;p("#student-progress-line-chart-container");const e=928,r=500,i=20,n=30,a=30,o=40,l=$(w(t,s=>s.date),[o,e-n]),h=B([0,C(t,s=>s.quantity)],[r-a,i]),f=P().x(s=>l(s.date)).y(s=>h(s.quantity)),c=p("#student-progress-line-chart-container").append("svg").attr("width",e).attr("height",r).attr("viewBox",[0,0,e,r]).attr("style","max-width: 100%; height: auto; height: intrinsic;");c.append("g").attr("transform",`translate(0,${r-a})`).call(v(l).ticks(t.length/2).tickSizeOuter(0)),c.append("g").attr("transform",`translate(${o},0)`).call(L(h).ticks(r/80)).call(s=>s.selectAll(".tick line").clone().attr("x2",e-o-n).attr("stroke-opacity",.1)).call(s=>s.append("text").attr("x",-o).attr("y",10).attr("fill","currentColor").attr("text-anchor","start").text("â†‘ Skills mastered")),c.append("path").attr("fill","none").attr("stroke","#5f31dd").attr("stroke-width",1.5).attr("d",f(t))}},b={id:"student-progress-line-chart-container"};function I(t,e,r,i,n,a){return d(),g("div",b)}const j=m(N,[["render",I]]),R={setup(){return{usersStore:_()}},components:{StudentProgressLineChart:j},data(){return{studentId:this.$route.params.studentId,studentName:null,studentProgress:[]}},async created(){this.usersStore.users.length<1&&await this.usersStore.getUsers();const t=this.usersStore.users.find(e=>e.id===this.studentId);t&&(this.studentName=t.username),await this.getStudentProgress()},methods:{async getStudentProgress(){fetch(`/student-analytics/student-progress/${this.studentId}`).then(t=>t.json()).then(t=>{for(let e=0;e<t.length;e++)t[e].date=new Date(t[e].date);t.sort((e,r)=>e.date-r.date),this.studentProgress=t}).catch(t=>{console.error("Error fetching student progress:",t)})}}},V={class:"container"},q={class:"d-flex justify-content-between w-100"},A=u("h1",{class:"heading"},"Progress Report",-1),D={class:"secondary-heading h3"};function E(t,e,r,i,n,a){const o=x("StudentProgressLineChart");return d(),g("div",V,[u("span",q,[A,u("h2",D,S(n.studentName),1)]),n.studentProgress.length>0?(d(),y(o,{key:0,data:n.studentProgress},null,8,["data"])):k("",!0)])}const X=m(R,[["render",E]]);export{X as default};
