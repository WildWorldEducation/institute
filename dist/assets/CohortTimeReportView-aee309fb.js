import{u as P}from"./CohortsStore-3f83ac6d.js";import{_ as D,o as d,c as m,f as $,r as g,a as u,t as T,k as f,b}from"./main-82acb036.js";import{C as q}from"./CohortDurationPerDayLineChart-a130d981.js";import{s as p}from"./transform-35b9fb9e.js";import{l as _,m as S,a as k,b as C}from"./linear-c968f95f.js";import{b as x}from"./band-18e9f0c1.js";import{s as w}from"./sort-855cf5d1.js";import"./line-8aa3dac8.js";import"./time-962c8065.js";import"./point-ea70dc51.js";const A={name:"CohortCompareDurationHorizontalChart",props:["data","colour"],data(){return{padding:60}},mounted(){p("#cohort-compare-duration-chart-container");const t=25,o=0,a=0,h=10,n=200,i=1e3,c=Math.ceil((this.data.length+.1)*t)+o+h,r=_().domain([0,S(this.data,e=>e.quantity)]).range([n,i-a]),s=x().domain(w(this.data,e=>-e.quantity).map(e=>e.name)).rangeRound([o,c-h]).padding(.1);r.tickFormat(20);const l=p("#cohort-compare-duration-chart-container").append("svg").attr("width",i).attr("height",c).attr("viewBox",[0,0,i,c]).attr("style","max-width: 100%; height: 100%; font: 14px sans-serif;");l.append("g").attr("fill",this.colour).selectAll().data(this.data).join("rect").attr("x",r(0)).attr("y",e=>s(e.name)).attr("width",e=>r(e.quantity)-r(0)).attr("height",s.bandwidth()),l.append("g").attr("fill","white").attr("text-anchor","end").selectAll().data(this.data).join("text").attr("x",e=>r(e.quantity)).attr("y",e=>s(e.name)+s.bandwidth()/2).attr("dy","0.35em").attr("dx",-4).text(e=>e.formattedQuantity).call(e=>e.filter(y=>r(y.quantity)-r(0)<20).attr("dx",4).attr("fill","black").attr("text-anchor","start")),l.append("g").attr("transform",`translate(0,${o})`).call(k(r).ticks(0)).call(e=>e.select(".domain").remove()),l.append("g").attr("transform",`translate(${n},0)`).call(C(s).tickSizeOuter(0))}},v={id:"cohort-compare-duration-chart-container"};function j(t,o,a,h,n,i){return d(),m("div",v)}const B=D(A,[["render",j]]),I={name:"CohortDurationPerSkillHorizontalBarChart",props:["data","colour"],data(){return{padding:60}},mounted(){p("#cohort-duration-per-skill-chart-container");const t=25,o=0,a=0,h=10,n=200,i=1e3,c=Math.ceil((this.data.length+.1)*t)+o+h,r=_().domain([0,S(this.data,e=>e.quantity)]).range([n,i-a]),s=x().domain(w(this.data,e=>-e.quantity).map(e=>e.name)).rangeRound([o,c-h]).padding(.1);r.tickFormat(20);const l=p("#cohort-duration-per-skill-chart-container").append("svg").attr("width",i).attr("height",c).attr("viewBox",[0,0,i,c]).attr("style","max-width: 100%; height: 100%; font: 14px sans-serif;");l.append("g").attr("fill",this.colour).selectAll().data(this.data).join("rect").attr("x",r(0)).attr("y",e=>s(e.name)).attr("width",e=>r(e.quantity)-r(0)).attr("height",s.bandwidth()),l.append("g").attr("fill","white").attr("text-anchor","end").selectAll().data(this.data).join("text").attr("x",e=>r(e.quantity)).attr("y",e=>s(e.name)+s.bandwidth()/2).attr("dy","0.35em").attr("dx",-4).text(e=>e.formattedQuantity).call(e=>e.filter(y=>r(y.quantity)-r(0)<40).attr("dx",4).attr("fill","black").attr("text-anchor","start")),l.append("g").attr("transform",`translate(0,${o})`).call(k(r).ticks(0)).call(e=>e.select(".domain").remove()),l.append("g").attr("transform",`translate(${n},0)`).call(C(s).tickSizeOuter(0))},computed:{}},z={id:"cohort-duration-per-skill-chart-container"};function H(t,o,a,h,n,i){return d(),m("div",z)}const M=D(I,[["render",H]]),Q={setup(){const t=P(),o=$();return{cohortsStore:t,userDetailsStore:o}},components:{CohortDurationPerDayLineChart:q,CohortCompareDurationHorizontalChart:B,CohortDurationPerSkillHorizontalBarChart:M},data(){return{cohortId:this.$route.params.cohortId,cohortName:"",durationsPerDay:[],studentTotalDurations:[],studentDurationsPerSkill:[]}},async created(){this.cohortsStore.cohorts.length<1&&await this.cohortsStore.getCohorts(this.userDetailsStore.userId);const t=this.cohortsStore.cohorts.find(o=>o.id==this.cohortId);t&&(this.cohortName=t.name),this.cohortId!="all-students"?(await this.getCohortDurationPerDay(),await this.getCohortStudentTotalDurations(),await this.getCohortDurationsPerSkill()):(await this.getAllStudentsDurationPerDay(),await this.getAllStudentsStudentTotalDurations(),await this.getAllStudentsDurationsPerSkill())},methods:{async getCohortDurationPerDay(){fetch(`/student-analytics/cohort-duration-per-day/${this.cohortId}`).then(t=>t.json()).then(t=>{for(let o=0;o<t.length;o++)t[o].formattedQuantity=t[o].quantity/(1e3*60),t[o].date=new Date(t[o].date);t.sort((o,a)=>o.date-a.date),this.durationsPerDay=t}).catch(t=>{console.error("Error fetching student duration per day:",t)})},async getAllStudentsDurationPerDay(){fetch(`/student-analytics/all-students-duration-per-day/${this.userDetailsStore.userId}`).then(t=>t.json()).then(t=>{for(let o=0;o<t.length;o++)t[o].formattedQuantity=t[o].quantity/(1e3*60),t[o].date=new Date(t[o].date);t.sort((o,a)=>o.date-a.date),this.durationsPerDay=t}).catch(t=>{console.error("Error fetching student duration per day:",t)})},async getCohortStudentTotalDurations(){fetch(`/student-analytics/cohort-total-durations/${this.cohortId}`).then(t=>t.json()).then(t=>{for(let o=0;o<t.length;o++)t[o].formattedQuantity=this.millisToMinutesAndSeconds(t[o].quantity),t[o].date=new Date(t[o].date);t.sort((o,a)=>o.date-a.date),this.studentTotalDurations=t}).catch(t=>{console.error("Error fetching student duration per day:",t)})},async getAllStudentsStudentTotalDurations(){fetch(`/student-analytics/all-students-total-durations/${this.userDetailsStore.userId}`).then(t=>t.json()).then(t=>{for(let o=0;o<t.length;o++)t[o].formattedQuantity=this.millisToMinutesAndSeconds(t[o].quantity),t[o].date=new Date(t[o].date);t.sort((o,a)=>o.date-a.date),this.studentTotalDurations=t}).catch(t=>{console.error("Error fetching student duration per day:",t)})},async getCohortDurationsPerSkill(){fetch(`/student-analytics/cohort-student-durations-per-skill/${this.cohortId}`).then(t=>t.json()).then(t=>{for(let o=0;o<t.length;o++)t[o].formattedQuantity=this.millisToMinutesAndSeconds(t[o].quantity);this.studentDurationsPerSkill=t}).catch(t=>{console.error("Error fetching student durations per skill:",t)})},async getAllStudentsDurationsPerSkill(){fetch(`/student-analytics/all-students-student-durations-per-skill/${this.userDetailsStore.userId}`).then(t=>t.json()).then(t=>{for(let o=0;o<t.length;o++)t[o].formattedQuantity=this.millisToMinutesAndSeconds(t[o].quantity);this.studentDurationsPerSkill=t}).catch(t=>{console.error("Error fetching student durations per skill:",t)})},millisToMinutesAndSeconds(t){var o=Math.floor(t/6e4),a=(t%6e4/1e3).toFixed(0);return o+":"+(a<10?"0":"")+a}}},E={class:"container"},N={class:"d-flex justify-content-between w-100"},L=u("h1",{class:"heading"},"Time Report",-1),R={class:"secondary-heading h3"},F=u("h4",{class:"secondary-heading"},"Total time on platform per day",-1),O={key:1},V=u("h4",{class:"secondary-heading mt-4"}," Total time on platform, comparing students ",-1),U={key:3},G=u("h4",{class:"secondary-heading mt-4"},"Minutes per skill",-1);function J(t,o,a,h,n,i){const c=g("CohortDurationPerDayLineChart"),r=g("CohortCompareDurationHorizontalChart"),s=g("CohortDurationPerSkillHorizontalBarChart");return d(),m("div",E,[u("span",N,[L,u("h2",R,T(n.cohortName),1)]),F,n.durationsPerDay.length>0?(d(),f(c,{key:0,data:n.durationsPerDay,class:"mb-5"},null,8,["data"])):(d(),m("p",O,"No time recorded yet")),V,n.studentTotalDurations.length>0?(d(),f(r,{key:2,data:n.studentTotalDurations,colour:"#5f31dd",class:"mb-5"},null,8,["data"])):(d(),m("p",U,"No time recorded yet")),G,n.studentDurationsPerSkill.length>0?(d(),f(s,{key:4,data:n.studentDurationsPerSkill,class:"mb-5",colour:"#5f31dd"},null,8,["data"])):b("",!0)])}const nt=D(Q,[["render",J]]);export{nt as default};
